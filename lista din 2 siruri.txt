#include <stdio.h>
#include <stdlib.h>
typedef struct lista
{
	int key;
	struct lista *next, *prev;
}tip_lista;


typedef struct root
{
	tip_lista *head;
}tip_head;
void initiaza_lista(tip_head *L,int a[], int n)
{
	int i;
	tip_lista *elem;	
	(L->head)->key=a[0];
	for(i=1;i<n;i++)
	{
		
		elem=(tip_lista*)malloc(sizeof(tip_lista));
		elem->key=(L->head)->key;
		elem->prev=(L->head);
		elem->next=(L->head)->next;
		(L->head)->key=a[i];
		(L->head)->next=elem;
	}
	return;
}
void uneste_liste(tip_head *L1, tip_head *L2)
{
	tip_lista *elem;
	elem=(L1->head);
	while(elem->next!=NULL) elem=elem->next;
	(L2->head)->prev=elem;
	elem->next=(L2->head);
	return;
}
void print_list(tip_lista *elem)
{
	printf("elementele listei sunt:");
	while(elem!=NULL)
	{
		printf("%d ",elem->key);
		elem=elem->next;
	}

	return;
}

void main()
{
	int i,m,n,a[150], b[150];
	tip_head *L1, *L2;
	

	L1=(tip_head*)malloc(sizeof(tip_head));
	L2=(tip_head*)malloc(sizeof(tip_head));
	L1->head=(tip_lista*)malloc(sizeof(tip_lista));
	L2->head=(tip_lista*)malloc(sizeof(tip_lista));
	L1->head->prev=NULL;
	L1->head->next=NULL;
	L2->head->prev=NULL;
	L2->head->next=NULL;
	printf("introduceti valoarea lui m:");
	scanf("%d",&m);
	
	printf("introduceti valoare lui n:");
	scanf("%d",&n);
	
	printf("introduceti elementele vectorilor:");
	for(i=0;i<m;i++)
	{
		printf("a[%d]=",i);
		scanf("%d",&a[i]);
	}
	for(i=0;i<n;i++)
	{
		printf("b[%d]=",i);
		scanf("%d",&b[i]);
	}
	
	initiaza_lista(L1,a,m);
	initiaza_lista(L2,b,n);
	uneste_liste(L1,L2);
	print_list(L1->head);
}