#include <stdio.h>

//!!!INTRODUCETI BACNOTE EXISTENTE...NU 13 RON SAU CN MAI STIE CE :d!!!

int partition(int M[],int D[],int p,int r)
{
	int x,i,j,aux,temp;
	x=M[r];
	i=p-1;
	for(j=p;j<=r-1;j++)
	{
		if(M[j]<x)
		{
			i++;
			aux=M[i];
			M[i]=M[j];
			M[j]=aux;

			aux=D[i];
			D[i]=D[j];
			D[j]=aux;
		}
	}
	temp=M[i+1];
	M[i+1]=M[r];
	M[r]=temp;

	aux=D[i+1];
	D[i+1]=D[r];
	D[r]=aux;
	return i+1;
}
void sorteaza(int M[],int D[],int p, int r)
{
	int q;
	if(p<r)
	{
		q=partition(M,D,p,r);
		sorteaza(M,D,p,q-1);
		sorteaza(M,D,q+1,r);
	}
}
 int verifica_disp(int D[],int M[],int n,int s)
 {
	 int i,p=0;
	 for(i=1;i<=n;i++) p=p+M[i]*D[i];
	 if(p<s) return 0;
	 else return 1;
 }


void solutie(int M[],int D[], int n,int s)
{
	int p=0,i,j,v[100],k=0,m=s,disp=0,ok;
	ok=verifica_disp(D,M,n,s);
	if(ok)
	{
		for(j=1;j<=n;j++) v[j]=0;
		for(i=1;i<=n;i++)
		{
			for(j=1;j<=i;j++) p=p+v[i];
			if(p<m)
			{
				v[i]=M[i]*D[i];
				s=s-v[i];
				while(s<=0)
				{
					s=s+M[i];
					v[i]=v[i]-M[i];
				}
				if(s==M[i])
				{
					v[i]=v[i]+M[i];
				}
				else

					while(s%M[i+1]!=0 )
					{
						v[i]=v[i]-M[i];
						s=s+M[i];
					}
				k++;

			}
			else break;
		}

		printf("Suma e alcatuita din:\n");
		for(i=1;i<=k;i++) printf("bacnota cu valoare: %d de %d ori\n",M[i],v[i]/M[i]);
	}
	else printf("Disponibil insuficient!\n");
	return;
}


void main()
{
	int i=1,M[100],D[100],s,m;
	printf("introduceti suma dorita:");
	scanf("%d",&s);
	printf("introduceti numarul tipurilor de bacnote:");
	scanf("%d",&m);
	printf("introduceti bacnotele posibile ( existente ) si disponibilul pentru fiecare:");
	for(i=1;i<=m;i++)
	{
		printf("M[%d]=",i);
		scanf("%d",&M[i]);

		printf("D[%d]=",i);
		scanf("%d",&D[i]);

	}
	sorteaza(M,D,1,m);

	solutie(M,D,m,s);

}
